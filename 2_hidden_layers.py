from Neuron_MultiLayer import NeuronMultiLayer
from numpy import array, round
train_data = array([[1, 0, 1, 1, 0, 0],
                    [1, 1, 1, 0, 1, 0],
                    [1, 1, 1, 0, 0, 1],
                    [1, 0, 0, 0, 1, 0],
                    [0, 1, 0, 1, 0, 1],
                    [1, 0, 1, 0, 0, 1],
                    [0, 1, 0, 1, 1, 0],
                    [0, 1, 1, 0, 1, 0],

                    [1, 0, 1, 0, 0, 1],
                    [1, 1, 0, 0, 1, 0],
                    [0, 1, 0, 0, 0, 1],
                    [0, 1, 1, 1, 1, 1],
                    [1, 0, 1, 1, 0, 0],
                    [0, 1, 0, 1, 0, 1],
                    [0, 0, 0, 0, 0, 1],
                    [0, 1, 0, 0, 0, 1],

                    [1, 0, 1, 1, 0, 0],
                    [0, 1, 0, 0, 0, 1],
                    [0, 1, 1, 1, 1, 1],
                    [1, 0, 1, 1, 0, 0],
                    [1, 1, 1, 1, 0, 1],
                    [0, 0, 0, 0, 0, 1],
                    [0, 1, 0, 0, 0, 1],
                    [0, 1, 1, 1, 1, 1],

                    [1, 0, 0, 1, 0, 1],
                    [0, 0, 1, 0, 0, 1],
                    [0, 0, 0, 0, 0, 0],
                    [0, 1, 0, 0, 0, 1],
                    [0, 0, 1, 1, 1, 0],
                    [0, 0, 1, 1, 0, 0],
                    [0, 1, 0, 1, 0, 0],
                    [0, 0, 0, 0, 0, 1],
                    ])

train_output = array([[0], [1], [1], [1], [1], [0], [1], [0],
                      [0], [0], [1], [0], [0], [1], [0], [1],
                      [0], [1], [0], [0], [1], [0], [1], [0],
                      [1], [1], [0], [1], [1], [1], [1], [0]])

test_data = array([[1, 0, 1, 0, 1, 1],
                   [1, 0, 0, 1, 0, 0],
                   [1, 1, 1, 1, 1, 0],
                   [0, 0, 1, 0, 1, 0],
                   [0, 1, 0, 1, 1, 1],
                   [1, 1, 1, 0, 1, 1],
                   [0, 1, 0, 0, 1, 0],
                   [1, 1, 0, 0, 0, 0],
                   [1, 0, 1, 1, 1, 0],
                   [0, 1, 0, 0, 0, 0]])

test_output = array([[0], [1], [1], [1], [1],
                     [1], [1], [0], [0], [1]])


# ------------------------------------

model = NeuronMultiLayer(6, 12, 12, 1)
model.learn(train_data, train_output, 100000)


# ------------------------------------

print(model.w1)
print(model.w2)
print(model.w3)
print("Solved:")
print(model.think(test_data))
print("error")
print(round((model.think(test_data) - test_output) * 100), sum(round((abs(model.think(test_data) - test_output)) * 100) / 10))
